#!/usr/bin/env python3

from spfToIPs import QueryNew
from spf import PermError, TempError

USAGE = """To convert spf to list of ips:
    % python generateWhitelist.py {domainfile} {ipfile} [{outputfile}]
"""


def generate_whitelist(domainfile=None, ipfile=None, outputfile=None):
    # write to stdout
    if not outputfile:
        import sys
        outputfile = sys.stdout

    outputfile.write("""#################################################
# generated by generateWhitelist. Do not change #
#################################################\n\n""")

    if ipfile:
        outputfile.write("# static import from ip file\n")
        for ip in ipfile:
            outputfile.write(ip)

        outputfile.write("\n\n")

    if domainfile:
        for domain in domainfile:
            domain = domain.strip("\n\r\I ")

            outputfile.write("# %s\n" % domain)
            try:
                query = QueryNew()
                ips = query.get_ips(query.dns_spf(domain), True)

                outputfile.write("\n".join(map(lambda x: str(x), ips)) + "\n\n")
            except TempError as x:
                print("Temporary DNS error: ", x)
            except PermError as x:
                print("PermError: ", x)


if __name__ == '__main__':
    import getopt
    import sys
    import os

    try:
        opts, argv = getopt.getopt(sys.argv[1:], "h", ["help"])
    except getopt.GetoptError as err:
        print(str(err))
        print(USAGE)
        sys.exit(2)

    for o, a in opts:
        if o in ('-h', '--help'):
            print(USAGE)

    if len(argv) == 0:
        print(USAGE)

    elif len(argv) == 3:
        (df_name, if_name, of_name) = argv
        if not os.path.isfile(df_name):
            print("domain File does not exists")
            sys.exit(2)
        if not os.path.isfile(if_name):
            print("ip File does not exists")
            sys.exit(2)

        df = open(df_name, 'r')
        ipf = open(if_name, 'r')
        of = open(of_name, 'w')

        generate_whitelist(domainfile=df, ipfile=ipf, outputfile=of)

        df.close()
        ipf.close()
        of.close()
    else:
        print(USAGE)
